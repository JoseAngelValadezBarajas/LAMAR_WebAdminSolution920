<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblAcademicRecord" xml:space="preserve">
    <value>Registro académico</value>
  </data>
  <data name="lblActive" xml:space="preserve">
    <value>Activo</value>
  </data>
  <data name="lblAdd" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="lblAddSigner" xml:space="preserve">
    <value>Agregar firmante</value>
  </data>
  <data name="lblCancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="lblCurp" xml:space="preserve">
    <value>CURP</value>
  </data>
  <data name="lblDelete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="lblEdit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="lblEditSigner" xml:space="preserve">
    <value>Editar firmante</value>
  </data>
  <data name="lblElectronicDegree" xml:space="preserve">
    <value>Título electrónico</value>
  </data>
  <data name="lblError" xml:space="preserve">
    <value>Se produjo un error al procesar su solicitud.</value>
  </data>
  <data name="lblErrorAbbreviation" xml:space="preserve">
    <value>Ingresar una abreviación del título profesional</value>
  </data>
  <data name="lblErrorCurp" xml:space="preserve">
    <value>Ingresar un CURP válido</value>
  </data>
  <data name="lblErrorCurpExists" xml:space="preserve">
    <value>Este CURP ya ha sido usado.</value>
  </data>
  <data name="lblErrorFirstSurname" xml:space="preserve">
    <value>Ingresar primer apellido</value>
  </data>
  <data name="lblErrorLaborPosition" xml:space="preserve">
    <value>Ingresar un puesto laboral</value>
  </data>
  <data name="lblErrorName" xml:space="preserve">
    <value>Ingresar nombre</value>
  </data>
  <data name="lblErrorSecondSurname" xml:space="preserve">
    <value>Ingresar segundo apellido</value>
  </data>
  <data name="lblErrorThumprint" xml:space="preserve">
    <value>Ingrese una huella digital válida</value>
  </data>
  <data name="lblErrorThumprintExists" xml:space="preserve">
    <value>Esta huella digital no es válida o ya ha sido usada.</value>
  </data>
  <data name="lblFiel" xml:space="preserve">
    <value>FIEL</value>
  </data>
  <data name="lblFirstSurname" xml:space="preserve">
    <value>Primer apellido</value>
  </data>
  <data name="lblInactive" xml:space="preserve">
    <value>Inactivo</value>
  </data>
  <data name="lblInstitution" xml:space="preserve">
    <value>Institución</value>
  </data>
  <data name="lblInstitutionsCode" xml:space="preserve">
    <value>Código de la institución</value>
  </data>
  <data name="lblInstitutionsName" xml:space="preserve">
    <value>Nombre de la institución</value>
  </data>
  <data name="lblLaborPosition" xml:space="preserve">
    <value>Puesto laboral</value>
  </data>
  <data name="lblLaborPositionCode" xml:space="preserve">
    <value>Código del puesto laboral</value>
  </data>
  <data name="lblName" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="lblNoSigners" xml:space="preserve">
    <value>No hay firmantes que mostrar, dar clic en el botón Agregar para comenzar.</value>
  </data>
  <data name="lblProfessionalTitleAbbreviation" xml:space="preserve">
    <value>Abreviación del título profesional</value>
  </data>
  <data name="lblSave" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="lblSecondSurname" xml:space="preserve">
    <value>Segundo apellido</value>
  </data>
  <data name="lblSetup" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="lblSigner" xml:space="preserve">
    <value>Firmante</value>
  </data>
  <data name="lblSigners" xml:space="preserve">
    <value>Firmantes</value>
  </data>
  <data name="lblStatus" xml:space="preserve">
    <value>Estatus</value>
  </data>
  <data name="lblThumbprint" xml:space="preserve">
    <value>Huella digital</value>
  </data>
</root>