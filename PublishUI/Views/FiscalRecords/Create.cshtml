@model WebAdminUI.Models.FiscalRecords.CashReceiptViewModel
@{
    ViewBag.Title = @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Title;
    var permissions = ViewBag.Account as PowerCampus.Entities.Account;
    var isSubstiution = Model.CancelReasonName == PowerCampus.Entities.Enum.CancelReasonName.ErrorRelacion;
    var ReceiverModel = ViewBag.ReceiverPanelModel as WebAdminUI.Models.Receivers.ReceiverViewModel;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCreate" }))
{
    <div class="esg-card--panel">

        @if (Model.chargesToInvoiceList[0].isATax == true)
        {
            <div id="NullTaxMapping" class="esg-instruction" role="alert">
                <span class="esg-instruction__icon-wrap">
                    <span class="esg-instruction__icon esg-icon__container" aria-hidden="True">
                        <svg class="esg-icon esg-icon--info-dark">
                            <use xlink:href="#icon-info"></use>
                        </svg>
                    </span>
                </span>
                <div class="esg-instruction__message">
                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblTaxMapping
                </div>
            </div>
        }

        @foreach (var IsEmptyProductServiceKey in Model.chargesToInvoiceList)
        {
            if (IsEmptyProductServiceKey.IsEmptyProductServiceKey)
            {
                <div class="esg-instruction" role="alert">
                    <span class="esg-instruction__icon-wrap">
                        <span class="esg-instruction__icon esg-icon__container" aria-hidden="True">
                            <svg class="esg-icon esg-icon--info-dark">
                                <use xlink:href="#icon-info"></use>
                            </svg>
                        </span>
                    </span><div class="esg-instruction__message">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.ProductServiceCodeRequired</div>
                </div>
            }
        }
        <div class="esg-page-header">
            @if (isSubstiution)
            {
                <h1 class="esg-page-header__title">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblSubstituteCancel</h1>
            }
            else
            {
                <h1 class="esg-page-header__title">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblInvoice</h1>
            }
        </div>
        <div class="esg-card--panel__body">
            <div class="row">
                <div class="esg-card--panel__body" style="margin-left:20px">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        @if (isSubstiution)
                        {
                            <h3>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblNewInvoice</h3>
                        }
                        else
                        {
                            @*Receipt Number*@
                            <h3>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.receiptNumber @Html.DisplayFor(m => m.receiptNumber, null, null, new { @class = "form-control", @id = "ReceiptNumber" })</h3>
                        }
                    </div>
                </div>
            </div>
            <br />

            @if (isSubstiution)
            {
                <div class="row">
                    @*Related CFDI*@
                    <div class="esg-card--panel__body" style="margin-left:20px">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <fieldset>
                                <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblRelatedCFDI</legend>
                                <div class="row">
                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                        @Html.LabelFor(m => m.RelationTypeDesc, new { @class = "esg-form__label" })<br />
                                        @Html.TextBoxFor(m => m.RelationTypeDesc, Model.RelationTypeDesc, new { @class = "esg-form__input", @id = "RelationTypeDesc", @readonly = "readonly" })<br />
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                        @Html.LabelFor(m => m.CFDIRelated, new { @class = "esg-form__label" })<br />
                                        @Html.TextBoxFor(m => m.CFDIRelated, Model.CFDIRelated, new { @class = "esg-form__input", @id = "CFDIRelated", @readonly = "readonly" })<br />
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
            }
            <input type="hidden" id="IsSubstitution" value="@isSubstiution.ToString()" />

            <div class="row">
                @*Receiver*@
                <div class="esg-card--panel__body" style="margin-left:20px">
                    <div class="col-xs-12">
                        <fieldset>
                            <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Receiver</legend>
                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div id="RecTaxPayerGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.TaxPayerId, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBoxFor(m => m.TaxPayerId, new { @class = "esg-form__input", @id = "TaxPayerId" })
                                            <div id="RecTaxPayerDivLookup" class="esg-form__icon esg-icon__container esg-form__icon--submit">
                                                <svg class="esg-icon esg-icon--small">
                                                    <use xlink:href="#icon-lookup"></use>
                                                </svg>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.TaxPayerId, "", new { @class = "text-danger validation-label" })
                                            <label id="msgTaxpayerIdEmpty" class="text-danger validation-label" style="display: none;">
                                                @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.TaxPayerIdRequired
                                            </label>
                                            <label id="msgTaxpayerIdInvalid" class="text-danger validation-label" style="display: none;">
                                                @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.TaxPayerIdInvalid
                                            </label>
                                            <div id="RecTaxPayerIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.LabelFor(m => m.CorporateName, new { @class = "esg-form__label" })<br />
                                    @Html.TextBoxFor(m => m.CorporateName, Model.CorporateName, new { @class = "esg-form__input", @id = "NameCorpName", @readonly = "readonly" })<br />
                                    <div id="PostalCodeGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.PostalCode, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBoxFor(m => m.PostalCode, new { @class = "esg-form__input", @id = "PostalCode", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger validation-label" })
                                            <div id="PostalCodeIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="RecTaxRegimenGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.RecTaxRegimen, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBoxFor(m => m.RecTaxRegimen, new { @class = "esg-form__input", @id = "RecTaxRegimen", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.RecTaxRegimen, "", new { @class = "text-danger validation-label" })
                                            <div id="RecTaxRegimenIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(m => m.FiscalResidency, new { @class = "esg-form__label" })<br />
                                    @Html.TextBoxFor(m => m.FiscalResidency, new { @class = "esg-form__input", @id = "FiscalAddress", @readonly = "readonly" })
                                    @Html.HiddenFor(m => m.FiscalResidencyCode, new { id = "FiscalAddressCode" })<br />
                                    @Html.LabelFor(m => m.FiscalIdentityNumber, new { @class = "esg-form__label" })<br />
                                    @Html.TextBoxFor(m => m.FiscalIdentityNumber, new { @class = "esg-form__input", @id = "FiscalIdNum", @readonly = "readonly" })<br />
                                    <div id="EmailGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.preferredReceiverEmail, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBoxFor(m => m.preferredReceiverEmail, new { @class = "esg-form__input", @id = "PreferredEmail", placeholder = @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.YourEmail })
                                            @Html.ValidationMessageFor(m => m.preferredReceiverEmail, "", new { @class = "text-danger validation-label" })
                                            <div id="EmailIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="CFDIGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.CFDIList, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.DropDownListFor(m => Model.PreferredCFDIUsageCode,
                                                new SelectList(Model.CFDIList, "Code", "Description"),
                                                @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblSelect,
                                                new { @class = "esg-form__input", @id = "CFDI" })
                                            @Html.ValidationMessageFor(m => m.PreferredCFDIUsageCode, "", new { @class = "text-danger validation-label" })
                                            <div id="CFDIIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="col-xs-12">
                        <div class="esg-button-group" role="group" aria-label="button group">
                            <button class="esg-button esg-button--primary" type="button" id="btnAddReceiver">
                                @WebAdminUI.Views.Receivers.App_LocalResources.CreateResource.CreateNew
                            </button>
                            <button class="esg-button esg-button--primary" type="button" id="btnEditReceiver">
                                @WebAdminUI.Views.Receivers.App_LocalResources.CreateResource.Edit
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                @*Issuer*@
                <div class="esg-card--panel__body" style="margin-left:20px;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <fieldset>
                            <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Issuer</legend>
                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div id="IssTaxPayerGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssTaxpayerId, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBoxFor(m => m.IssTaxpayerId, null, new { @class = "esg-form__input", @id = "IssTaxPayerId" })
                                            <div id="IssTaxPayerDivLookup" class="esg-form__icon esg-icon__container esg-form__icon--submit">
                                                <svg class="esg-icon esg-icon--small">
                                                    <use xlink:href="#icon-lookup"></use>
                                                </svg>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.IssTaxpayerId, "", new { @class = "text-danger validation-label" })
                                            <div id="IssTaxPayerIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.LabelFor(m => m.IssCorporateName, new { @class = "esg-form__label" })<br />
                                    @Html.TextBox("IssNameCorpName", null, new { @class = "form-control", @id = "IssNameCorpName", @readonly = "readonly" })<br />
                                    <div id="IssTaxRegimenGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssTaxRegimen, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.TextBox("IssTaxRegimen", null, new { @class = "esg-form__input", @id = "IssTaxRegimen", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.IssTaxRegimen, "", new { @class = "text-danger validation-label" })
                                            <div id="IssTaxRegimenIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div id="IssIssuingAddressGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssIssuingAddress, new { @class = "esg-form__label esg-is-required" })<br />
                                        <div class="esg-form__input-group">
                                            @Html.DropDownListFor(m => m.IssIssuingAddress,
                                                new SelectList("", "", ""),
                                                new { @class = "esg-form__input", @id = "IssIssuingAddress" })
                                            @Html.ValidationMessageFor(m => m.IssIssuingAddress, "", new { @class = "text-danger validation-label" })
                                            <div id="IssIssuingAddressIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="IssPlaceIssueGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssPlaceIssue, new { @class = "esg-form__label esg-is-required" })
                                        <div class="esg-form__input-group">
                                            @Html.TextBox("IssPlaceIssue", null, new { @class = "esg-form__input", @id = "IssPlaceIssue", @readonly = "readonly" })
                                            @Html.ValidationMessage("IssPlaceIssue", "", new { @class = "text-danger validation-label" })
                                            <div id="IssPlaceIssueIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                                                <svg class="esg-icon esg-icon--error">
                                                    <use xlink:href="#icon-error"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.LabelFor(m => m.IssSerial, new { @class = "esg-form__label" })
                                    @Html.DropDownListFor(m => m.IssSerial, new SelectList("", "", ""), new { @class = "esg-form__input", @id = "IssSerial" })
                                    @Html.ValidationMessageFor(m => m.IssSerial, "", new { @class = "text-danger validation-label" })
                                    <label id="lblWarnSerial" style="display:none" class="text-danger">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblLastFolioAssigned</label>
                                    <br />
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>

            <div class="row">
                @*Fiscal Record*@
                <div class="esg-card--panel__body" style="margin-left:20px;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <fieldset>
                            <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.SubHeaderFiscalRecord</legend>
                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div id="RecIssueDateGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssueDate, new { @class = "esg-form__label esg-is-required" })
                                        <div class="esg-form__input-group">
                                            @Html.TextBox("IssueDate", null, new { @class = "esg-form__input", @id = "IssueDate" })
                                            @Html.ValidationMessageFor(m => m.IssueDate, "", new { @class = "text-danger" })
                                            <div class="esg-form__icon esg-icon__container">
                                                <svg class="esg-icon esg-icon--small">
                                                    <use xlink:href="#icon-calendar"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.LabelFor(m => m.PaymentType, new { @class = "esg-form__label" })<br />
                                    @Html.DropDownListFor(m => m.PaymentType.Code, new SelectList(Model.PaymentTypeList, "Code", "Description", Model.PaymentType.Id), new { @class = "esg-form__input", @id = "PaymentType" })<br />

                                    @Html.LabelFor(m => m.ReceiverPaymentMethodDefault, new { @class = "esg-form__label" })<br />
                                    @Html.TextBoxFor(m => m.ReceiverPaymentMethodDefault, new { @class = "esg-form__input", @id = "PaymentMethod", @readonly = "readonly" })<br />

                                    @Html.LabelFor(m => m.IssPaymentCondition, new { @class = "esg-form__label" })<br />
                                    @Html.TextAreaFor(m => m.IssPaymentCondition, new { @class = "esg-form__input", @id = "PaymentCondition", maxlength = 1000 })<br />
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div id="RecIssueTimeGroup" class="esg-form__group esg-has-feedback">
                                        @Html.LabelFor(m => m.IssueTime, new { @class = "esg-form__label esg-is-required" })
                                        <div class="esg-form__input-group ">
                                            @Html.TextBox("IssueTime", null, new { @class = "esg-form__input", @id = "IssueTime" })
                                            @Html.ValidationMessageFor(m => m.IssueTime, "", new { @class = "text-danger" })
                                            <div class="esg-form__icon esg-icon__container">
                                                <svg class="esg-icon esg-icon--small">
                                                    <use xlink:href="#icon-clock"></use>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                    <label class="esg-form__label">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.IssCurrency</label><br />
                                    @Html.TextBox("IssCurrency", PowerCampus.Entities.Constants.DefaultCurrency, new { @class = "esg-form__input", @id = "IssCurrency", @readonly = "readonly" })<br />

                                    @Html.LabelFor(m => m.Comments, new { @class = "esg-form__label" })<br />
                                    @Html.TextAreaFor(m => m.Comments, new { @class = "esg-form__input", @id = "IssComments", @rows = "3", maxlength = 500 })<br />
                                </div>
                            </div>
                            <div id="IssueAlert" class="row">
                                <div class="alert alert-warning" role="alert">
                                    La fecha y Hora de generaci&oacuten esta fuera de rango.
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>

            <div class="row">
                @*Details*@
                <div class="esg-card--panel__body" style="margin-left:30px;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <fieldset>
                            <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.lblDetail</legend>
                        </fieldset>
                        <div class="esg-table__container">
                            <table id="records_table" class="esg-table" style="width:98%">
                                <thead class="esg-table-head">
                                    <tr class="esg-table-head__row">
                                        <th class="esg-table-head__th" style="width: 15%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].ProductServiceKey)</th>
                                        <th class="esg-table-head__th" style="width: 10%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].ChargeCreditCode)</th>
                                        <th class="esg-table-head__th" style="width: 6%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].Quantity)</th>
                                        <th class="esg-table-head__th" style="width: 10%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].UnityKey)</th>
                                        <th class="esg-table-head__th" style="width: 15%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].UnityName)</th>
                                        <th class="esg-table-head__th" style="width: 20%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].ChargeCreditDesc)</th>
                                        <th class="esg-table-head__th" style="width: 6%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].UnitAmount)</th>
                                        <th class="esg-table-head__th" style="width: 6%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].TotalTaxes)</th>
                                        <th class="esg-table-head__th" style="width: 6%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].TotalUnit)</th>
                                        <th class="esg-table-head__th" style="width: 6%;">@Html.DisplayNameFor(m => Model.chargesToInvoiceList[0].SubjectToTax)</th>
                                    </tr>
                                </thead>
                                <tbody class="esg-table-body">
                                    @if (Model.chargesToInvoiceList != null)
                                    {
                                        foreach (var CashRe in Model.chargesToInvoiceList)
                                        {
                                            <tr class="esg-table-body__row">
                                                <td class="esg-table-body__td">
                                                    @Html.Label(CashRe.ProductServiceKey,
                                                       new
                                                       {
                                                           id = string.Format("ccPrdSrv_{0}", CashRe.ChargeCreditCodeId)
                                                       })
                                                    @Html.HiddenFor(m => CashRe.ChargeCreditCodeId,
                                                       new
                                                       {
                                                           id = string.Format("ccCode_{0}", CashRe.ChargeCreditCodeId),
                                                           Value = CashRe.ChargeCreditCodeId
                                                       })
                                                </td>
                                                <td class="esg-table-body__td">@CashRe.ChargeCreditCode</td>
                                                <td class="esg-table-body__td">@CashRe.Quantity</td>
                                                <td class="esg-table-body__td">@CashRe.UnityKey</td>
                                                <td class="esg-table-body__td ChargeDesc">
                                                    @{
                                                        var unitGroupClass = CashRe.UnityName.Length > 20 ? "esg-has-error" : string.Empty;
                                                        <div id="ccUnitDescGroup_@CashRe.ChargeCreditCodeId" class="esg-form__input-group @unitGroupClass">
                                                            <input type="text" class="esg-form__input" size="10" value="@CashRe.UnityName" maxlength="20"
                                                                   id="ccUnitDesc_@CashRe.ChargeCreditCodeId">
                                                            @if (CashRe.UnityName.Length > 20)
                                                            {
                                                                <label id="msgUnitMaxLength_@CashRe.ChargeCreditCodeId" class="text-danger validation-label">
                                                                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.UnitNameMaxLength
                                                                </label>
                                                                <div id="ccUnitDescIcon_@CashRe.ChargeCreditCodeId" class="esg-form__feedback-icon esg-icon__container">
                                                                    <svg class="esg-icon esg-icon--error">
                                                                        <use xlink:href="#icon-error"></use>
                                                                    </svg>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                </td>
                                                <td class="esg-table-body__td ChargeDesc">
                                                    <input type="text" class="esg-form__input" size="10" maxlength="1000" value="@CashRe.ChargeCreditDesc"
                                                           id="@string.Format("ccDesc_{0}", CashRe.ChargeCreditCodeId)">
                                                </td>
                                                <td class="esg-table-body__td">@Html.DisplayFor(m => CashRe.UnitAmount)</td>
                                                <td class="esg-table-body__td">@Html.DisplayFor(m => CashRe.TotalTaxes)</td>
                                                <td class="esg-table-body__td">@Html.DisplayFor(m => CashRe.TotalUnit)</td>
                                                <td class="esg-table-body__td">@Html.DisplayFor(m => CashRe.SubjectToTax)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table><br />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                @*Totals*@
                <div class="esg-card--panel__body" style="margin-left:20px;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                            @Html.LabelFor(m => m.SubTotal, new { @class = "esg-form__label" })<br />
                            @Html.TextBoxFor(m => m.SubTotal, new { @class = "form-control", @id = "SubTotal", @readonly = "readonly" })
                            <br /><br />

                            @Html.LabelFor(m => m.TotalTT, new { @class = "esg-form__label" })<br />
                            @Html.TextBoxFor(m => m.TotalTT, new { @class = "form-control", @id = "TotalTT", @readonly = "readonly" })
                            <br /><br />

                            @Html.LabelFor(m => m.Total, new { @class = "esg-form__label" })<br />
                            @Html.TextBoxFor(m => m.Total, new { @class = "form-control", @id = "Total", @readonly = "readonly" })
                            <br /><br />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="esg-button-group col-md-6 col-xs-12" style="margin-left:20px" role="group" aria-label="button group">
                    @{
                        var showProcessButton = false;
                        var buttonStyle = string.Empty;
                        var buttonText = string.Empty;
                        if (Model.chargesToInvoiceList[0].isATax == true)
                        {
                            buttonStyle = "display:none";
                            showProcessButton = true;
                        }
                        else if (permissions.permissions.Where(m => m.Description == "FiscalRecordsProccesses").Select(m => m.Value).FirstOrDefault())
                        {
                            showProcessButton = true;
                        }

                        if (isSubstiution)
                        {
                            buttonText = WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.btnProcessCancel;
                            <button class="esg-button esg-button--secondary" style="@buttonStyle" id="btnBack" type="button">
                                @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.btnBack
                            </button>
                        }
                        else
                        {
                            buttonText = WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Process;
                        }

                        if (showProcessButton)
                        {
                            <button class="esg-button esg-button--primary" style="@buttonStyle" id="btnProcessC" type="button">
                                @buttonText
                            </button>
                            <br /><br />
                        }
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12" style="margin-left:20px">
                    <div class="esg-alert esg-alert--error errorMessageSerialError" role="alert" style="display:none">
                        <span class="esg-alert__icon-wrapper">
                            <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--error-dark">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </span>
                        </span>
                        <div class="esg-alert__message">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.SerialError</div>
                    </div>
                    <div class="esg-alert esg-alert--error errorMessageRequiredDiv" role="alert" style="display:none">
                        <span class="esg-alert__icon-wrapper">
                            <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--error-dark">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </span>
                        </span>
                        <div class="esg-alert__message">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.RequiredFieldsMessage</div>
                    </div>
                    <div class="esg-alert esg-alert--error errorMessageDiv" role="alert" style="display:none">
                        <span class="esg-alert__icon-wrapper">
                            <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--error-dark">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </span>
                        </span>
                        <div class="esg-alert__message errorMessageResult">@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.ErrorMessageResult</div>
                    </div>
                    <div class="esg-alert esg-alert--success successMessageDiv" role="alert" style="display:none">
                        <span class="esg-alert__icon-wrapper">
                            <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--success-dark">
                                    <use xlink:href="#icon-check"></use>
                                </svg>
                            </span>
                        </span>
                        <div class="esg-alert__message successMessageResult"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@Html.Partial("_SaveReceiverModal", ReceiverModel)

<div id="Overlaydiv" class="esg-modal-overlay" style="display:none; position:fixed; top:0; bottom:0; left:0; right:0; z-index:1300"></div>
<div id="Processing" class="esg-modal-dialog" style="display:none;">
    <div class="esg-spinner-wrapper" style="position:absolute;">
        <div class="esg-spinner"></div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var SubsInvoiceExpeditionId = @Html.Raw(Json.Encode(Model.InvoiceExpeditionId));
        var SusbsSerialNumber = @Html.Raw(Json.Encode(Model.IssSerial));
        var CFDIRelated = @Html.Raw(Json.Encode(Model.CFDIRelated));
        var CFDIRelatedId = @Html.Raw(Json.Encode(Model.CFDIRelatedId));
        var CancelReasonName = @Html.Raw(Json.Encode(Model.CancelReasonName));
        var ReceiptNumber = @Html.Raw(Json.Encode(Model.receiptNumber));
        var PeopleOrgId = @Html.Raw(Json.Encode(Model.peopleOrgId));
        var urlGetReceivers = '@Url.Action("Get", "Receivers")';
        var urlGetCFDIReceivers = '@Url.Action("GetCFDI", "Receivers")';
        var urlSelectIssuerSetUp = '@Url.Action("SelectIssuerSetUp", "Issuers")';
        var urlGetTaxRegimen = '@Url.Action("GetTaxRegimen", "Issuers")';
        var urlGetSerialNumber = '@Url.Action("GetSerialNumber", "Issuers")';
        var urlGetIssuers = '@Url.Action("Get", "Issuers")';
        var urlCreateFiscalRecord = '@Url.Action("Create", "FiscalRecords")';
        var urlReceiptNumber = '@Url.Action("ReceiptNumber", "CashReceipts")';
        var urlCashReceipts = '@Url.Action("Application", "CashReceipts")';
        var urlEdit = '@Url.Action("Edit", "FiscalRecords", new { id = Model.CFDIRelatedId })';
        var urlViewAll = '@Url.Action("ViewAll")';

        //Resources
        var lblSelect = '@WebAdminUI.Views.ChargeCredits.App_localResources.PPD_cshtml.lblSelect';

        // Add/Edit Receiver
        var urlGetReceiver = '@Url.Action("Get", "Receivers")';
        var urlCreateReceiver = '@Url.Action("Create", "Receivers")';
        var urlEditReceiver = '@Url.Action("Update", "Receivers")';
        var urlGetCountires = '@Url.Action("GetCountries", "Receivers")';
        var urlGetPostalCode = '@Url.Action("GetPostalCode", "Issuers")';
        var urlGetTaxRegimenCatalog = '@Url.Action("GetTaxRegimenCatalog", "Issuers")';
        var ForeignTaxpayerId = '@PowerCampus.Entities.Constants.ForeignTaxPayerId';
    </script>
    @Scripts.Render("~/bundles/datetime")
    @Scripts.Render("~/bundles/FR/FiscalRecords")
}