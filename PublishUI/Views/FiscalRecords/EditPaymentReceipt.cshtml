<!--
    <copyright file="EditPaymentReceipt.cshtml" company="Ellucian">
        Copyright 2018 - 2022 Ellucian Company L.P. and its affiliates.
    </copyright>
-->
@model WebAdminUI.Models.FiscalRecords.FiscalRecordViewModel
@using PowerCampus.Entities;

@{
    ViewBag.Title = WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblEditPageTitle;
    var itself = ViewBag.itself as PaymentReceipt;
    var account = ViewBag.Account as PowerCampus.Entities.Account;
    var parentPPD = ViewBag.parentPPD as WebAdminUI.Models.FiscalRecords.FiscalRecordViewModel;
}

<div class="esg-page-header">
    <a class="esg-page-header__button" role="button" title="@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnBack" href="@Url.Action(" ViewAll", "FiscalRecords" )">
        <span class="esg-page-header__icon esg-icon__container">
            <svg class="esg-icon esg-icon--left">
                <use xlink:href="#icon-arrow"></use>
            </svg>
        </span>
    </a>
    <h1 class="esg-page-header__title">@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblEditPageTitle</h1>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCreate" }))
{
    @Html.Hidden("ReceiptNumber", itself.ReceiptNumber, new { id = "ReceiptNumber" })
    <div class="esg-card--panel">
        <div class="esg-card--panel__body">
            <div class="esg-card--panel__content">
                <div class="content-margin">
                    @*Headers*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <div class="row">
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.VoucherType, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.VoucherType, new { @class = "esg-form__input", @id = "VoucherType", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.folio, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.folio, new { @class = "esg-form__input", @id = "Folio", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.serialNumber, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.serialNumber, new { @class = "esg-form__input", @id = "Serie", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.requestState, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.requestState, new { @class = "esg-form__input", @id = "Status", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.expeditionDateTime, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                <input id="ExpeditionDate" type="text" name="ExpeditionDate" readonly="readonly" class="esg-form__input"
                                                       value="@Html.DisplayFor(m => m.expeditionDateTime, Model.expeditionDateTime.ToString())" />
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.uuid, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.uuid, new { @class = "esg-form__input", @id = "FiscalIdNum", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.errorText, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.errorText, new { @class = "esg-form__input", @id = "ErrorText", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    @if (Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.Canceled)
                    {
                        @*Cancellation*@
                        <div class="row">
                            <div class="col-xs-12">
                                <fieldset>
                                    <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.Cancellation</legend>
                                    <div class="row">
                                        <div class="col-sm-6 col-xs-12">
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.CancellationDatetime, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.CancellationDatetime, new { @class = "esg-form__input", @id = "ApprovedDatetimeCancellation", @readonly = "readonly" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-xs-12">
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.CancelReason, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.CancelReason, new { @class = "esg-form__input", @id = "CancelReason", @readonly = "readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    }

                    @*Receiver*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Receiver</legend>
                                <div class="row">
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.receiverTaxPayerId, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.receiverTaxPayerId, new { @class = "esg-form__input", @id = "TaxPayerId", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.receiverCorporateName, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.receiverCorporateName, new { @class = "esg-form__input", @id = "NameCorpName", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.RecTaxAddress, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.RecTaxAddress, new { @class = "esg-form__input", @id = "RecTaxAddress", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group esg-has-feedback">
                                            @Html.LabelFor(m => m.ReceiverTaxRegimen, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.ReceiverTaxRegimen, new { @class = "esg-form__input", @id = "ReceiverTaxRegimen", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.receiverFiscalResidency, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.receiverFiscalResidency, new { @class = "esg-form__input", @id = "FiscalAddress", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group esg-has-feedback">
                                            @Html.LabelFor(m => m.receiverFiscalIdentityNumber, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.receiverFiscalIdentityNumber, new { @class = "esg-form__input", @id = "FiscalIdentityNumber", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group esg-has-feedback">
                                            @Html.LabelFor(m => m.receiverEmail, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.receiverEmail, new { @class = "esg-form__input", @id = "PreferredEmail", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group esg-has-feedback">
                                            @Html.LabelFor(m => m.CFDIUsageCatalogList, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.CFDIUsageCode, new { @class = "esg-form__input", @id = "CFDI", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    @*Issuer*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.Issuer</legend>
                                <div class="row">
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.issuerIssTaxpayerId, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.issuerIssTaxpayerId, new { @class = "esg-form__input", @id = "IssTaxPayerId", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.IssuerCorporateName, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.IssuerCorporateName, new { @class = "esg-form__input", @id = "IssNameCorpName", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.IssuerTaxRegimen, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.IssuerTaxRegimen, new { @class = "esg-form__input", @id = "IssuerTaxRegimen", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.issIssuingAddIssIssuingAddress, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.issIssuingAddIssIssuingAddress, new { @class = "esg-form__input", @id = "IssIssuingAddress", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.issIssuingAddIssPlaceIssue, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.issIssuingAddIssPlaceIssue, new { @class = "esg-form__input", @id = "IssPlaceIssue", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        @*Added serial*@
                                        <div class="esg-form__group esg-has-feedback">
                                            @Html.LabelFor(m => m.serialNumber, new { @class = "esg-form__label" })
                                            @Html.TextBoxFor(m => m.serialNumber, new { @class = "esg-form__input", @id = "Serie", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    @*Fiscal Record*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>
                                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.SubHeaderFiscalRecord
                                </legend>
                                <div class="row">
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.paymentType, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.paymentType, new { @class = "esg-form__input", @id = "paymentType", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.paymentCondition, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextAreaFor(m => m.paymentCondition, new { @class = "esg-form__input", @id = "PaymentCondition", maxlength = 1000, @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.comments, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextAreaFor(m => m.comments, new { @class = "esg-form__input", @id = "IssComments", @rows = "3", maxlength = 500, @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.currency, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.currency, new { @class = "esg-form__input", @id = "IssCurrency", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.LabelFor(m => m.paymentMethod, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBoxFor(m => m.paymentMethod, new { @class = "esg-form__input", @id = "PaymentMethod", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    @if ((!string.IsNullOrEmpty(Model.RelationType) && !string.IsNullOrEmpty(Model.CFDIRelated))
                       || (!string.IsNullOrEmpty(Model.RelationType2) && !string.IsNullOrEmpty(Model.CFDIRelated2)))
                    {
                        @*CFDI Related*@
                        <div class="row">
                            <div class="col-xs-12">
                                <fieldset>
                                    <legend>@WebAdminUI.Views.CreditNotes.App_localResources.CreditNotes_cshtml.lblRelatedCFDI</legend>
                                    @if (!string.IsNullOrEmpty(Model.RelationType) && !string.IsNullOrEmpty(Model.CFDIRelated))
                                    {
                                        <div class="row">
                                            <div class="col-sm-6 col-xs-12">
                                                <div class="esg-form__group">
                                                    @Html.LabelFor(m => m.RelationType, new { @class = "esg-form__label" })
                                                    <div class="esg-form__input-group">
                                                        @Html.TextBoxFor(m => m.RelationType, new { @class = "esg-form__input", @id = "RelationType", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-xs-12">
                                                <div class="esg-form__group">
                                                    @Html.LabelFor(m => m.uuid, new { @class = "esg-form__label" })
                                                    <div class="esg-form__input-group">
                                                        @Html.TextBoxFor(m => m.CFDIRelated, new { @class = "esg-form__input", @id = "CFDIRelated", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.RelationType2) && !string.IsNullOrEmpty(Model.CFDIRelated2))
                                    {
                                        <div class="row">
                                            <div class="col-sm-6 col-xs-12">
                                                <div class="esg-form__group">
                                                    @Html.LabelFor(m => m.RelationType2, new { @class = "esg-form__label" })
                                                    <div class="esg-form__input-group">
                                                        @Html.TextBoxFor(m => m.RelationType2, new { @class = "esg-form__input", @id = "RelationType2", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-xs-12">
                                                <div class="esg-form__group">
                                                    @Html.LabelFor(m => m.uuid, new { @class = "esg-form__label" })
                                                    <div class="esg-form__input-group">
                                                        @Html.TextBoxFor(m => m.CFDIRelated2, new { @class = "esg-form__input", @id = "CFDIRelated2", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </fieldset>
                            </div>
                        </div>
                    }
                    <br />

                    <div id="divDetails" data-pagination="true">
                        @*Charge Credit*@
                        <div class="row">
                            <div class="col-xs-12">
                                <fieldset>
                                    <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblDetail</legend>
                                    <div class="esg-table__container">
                                        @if (ViewBag.HasDetails)
                                        {
                                            <table id="records_table" class="esg-table">
                                                <thead class="esg-table-head">
                                                    <tr class="esg-table-head__row">
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].ProductServiceKey)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].ChargeCreditCode)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].Quantity)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].UnityKey)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].UnityName)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].ChargeCreditDesc)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].UnitAmount)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].TotalTaxes)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].TotalUnit)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].SubjectToTax)</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="esg-table-body" id="records_table_rows_tbody">
                                                    <tr class="esg-table-body__row">
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].ProductServiceKey</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].ChargeCreditCode</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].Quantity</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].UnityKey</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].UnityName</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].ChargeCreditDesc</td>
                                                        <td class="esg-table-body__td text-right">@Model.InvoiceDetails[0].UnitAmount</td>
                                                        <td class="esg-table-body__td text-right">@Model.InvoiceDetails[0].TotalTaxes</td>
                                                        <td class="esg-table-body__td text-right">@Model.InvoiceDetails[0].TotalUnit</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].SubjectToTax</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        }
                                        else
                                        {
                                            <table id="records_table" class="esg-table">
                                                <thead class="esg-table-head">
                                                    <tr class="esg-table-head__row">
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].ChargeCreditCode)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].Quantity)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].UnityKey)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].ChargeCreditDesc)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].UnitAmount)</th>
                                                        <th class="esg-table-head__th">@Html.DisplayNameFor(m => Model.InvoiceDetails[0].TotalUnit)</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="esg-table-body" id="records_table_rows_tbody">
                                                    <tr class="esg-table-body__row">
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].ChargeCreditCode</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].Quantity</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].UnityKey</td>
                                                        <td class="esg-table-body__td">@Model.InvoiceDetails[0].ChargeCreditDesc</td>
                                                        <td class="esg-table-body__td text-right">@Model.InvoiceDetails[0].UnitAmount</td>
                                                        <td class="esg-table-body__td text-right">@Model.InvoiceDetails[0].TotalUnit</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        }
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                        <br />

                        @*Pagination*@
                        <div class="row">
                            <div class="col-xs-12">
                                @Html.Partial("_Pagination", new ViewDataDictionary() { { "Count", (Model.InvoiceDetails == null ? 0 : Model.InvoiceDetails.Count()) }, { "MinRows", 5 }, { "DefaultSelected", 10 } })
                            </div>
                        </div>
                    </div>

                    @if (Model.PaymentReceiptTotals != null)
                    {
                        @*Totals*@
                        <div class="row">
                            <div class="col-xs-12">
                                <fieldset>
                                    <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblTotals</legend>
                                    <div class="row">
                                        <div class="col-sm-6 col-xs-12">
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalPaymentsAmount, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalPaymentsAmount, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredBase16, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredBase16, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes16, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes16, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredBase8, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredBase8, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-xs-12">
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes8, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes8, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredBase0, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredBase0, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes0, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredTaxes0, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                            <div class="esg-form__group">
                                                @Html.LabelFor(m => m.PaymentReceiptTotals.TotalTransferredBaseExempt, new { @class = "esg-form__label" })
                                                <div class="esg-form__input-group">
                                                    @Html.TextBoxFor(m => m.PaymentReceiptTotals.TotalTransferredBaseExempt, new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                        <br />
                    }

                    @*Payment receipt complement*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>@CreateResource.SubHeaderPaymentReceipt</legend>
                                <div class="row">
                                    <div class="col-sm-4 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.PaymentDate, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("datepicker", itself.PaymentDate, new { @class = "esg-form__input", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.Amount, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("ComplementAmount", itself.Amount.Value.ToString(account.reportFormats.CurrencyFormat, System.Globalization.CultureInfo.InvariantCulture), new { @class = "esg-form__input", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.ComplementCurrency, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("ComplementCurrency", itself.Currency, new { @class = "esg-form__input", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.ComplementPaymentType, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("ComplementPaymentType", itself.PaymentTypeComplement, new { @class = "esg-form__input", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.TransactionNumber, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("TransactionNumber", itself.TransactionNumber, new { @class = "esg-form__input", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.IssuerTaxPayerIdOriginAccount, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("IssuerTaxPayerIdOriginAccount", itself.IssuerTaxpayerIdSourceAccountName, new { @class = "esg-form__input", @id = "IssuerTaxPayerIdOriginAccount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.OriginBankName, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("OriginBankName", itself.BankName, new { @class = "esg-form__input", @id = "OriginBankName", Name = "BankName", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.OriginAccount, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("OriginAccount", itself.SourceAccount, new { @class = "esg-form__input", @id = "OriginAccount", Name = "SourceAccount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.IssuerTaxPayerIdTargetAccount, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("IssuerTaxPayerIdTargetAccount", itself.IssuerTaxpayerIdBeneficiaryAccountName, new { @class = "esg-form__input", @id = "IssuerTaxPayerIdTargetAccount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.TargetAccount, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("TargetAccount", itself.BeneficiaryAccount, new { @class = "esg-form__input", @id = "TargetAccount", Name = "BeneficiaryAccount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-xs-12">
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.PaymentChainType, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextBox("PaymentChainType", itself.PaymentChainType, new { @class = "esg-form__input", @id = "PaymentChainType", Name = "PaymentChainType", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.PaymentCertificate, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextArea("PaymentCertificate", itself.PaymentCertificate, new { @class = "esg-form__input", @id = "PaymentCertificate", Name = "PaymentCertificate", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.PaymentChain, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextArea("PaymentChain", itself.PaymentChain, new { @class = "esg-form__input", @id = "PaymentChain", Name = "PaymentChain", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="esg-form__group">
                                            @Html.Label("", CreateResource.PaymentSignature, new { @class = "esg-form__label" })
                                            <div class="esg-form__input-group">
                                                @Html.TextArea("PaymentSignature", itself.PaymentStamp, new { @class = "esg-form__input", @id = "PaymentSignature", Name = "PaymentStamp", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <br />

                    @*Related documents*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>@CreateResource.SubHeaderRelatedDocuments</legend>
                                <div class="esg-table__container">
                                    <table id="records_table" class="esg-table">
                                        <thead class="esg-table-head">
                                            <tr class="esg-table-head__row">
                                                <th class="esg-table-head__th" style="width:320px;">@CreateResource.DocumentId</th>
                                                <th class="esg-table-head__th">@CreateResource.IssSerial</th>
                                                <th class="esg-table-head__th">@CreateResource.Folio</th>
                                                <th class="esg-table-head__th">@CreateResource.IssCurrency</th>
                                                <th class="esg-table-head__th">@CreateResource.paymentMethodDescDefault</th>
                                                <th class="esg-table-head__th">@CreateResource.InstallmentNumber</th>
                                                <th class="esg-table-head__th">@CreateResource.PreviousBalanceAmount</th>
                                                <th class="esg-table-head__th">@CreateResource.AmountPaid</th>
                                                <th class="esg-table-head__th">@CreateResource.OutstandingBalanceAmount</th>
                                            </tr>
                                        </thead>
                                        <tbody class="esg-table-body" id="records_table_rows_tbody">
                                            <tr class="esg-table-body__row">
                                                <td class="esg-table-body__td">
                                                    <span style="word-break:break-all">
                                                        @parentPPD.uuid
                                                    </span>
                                                </td>
                                                <td class="esg-table-body__td">@parentPPD.serialNumber</td>
                                                <td class="esg-table-body__td">@parentPPD.folio</td>
                                                <td class="esg-table-body__td">@parentPPD.currency</td>
                                                <td class="esg-table-body__td">@parentPPD.paymentMethod</td>
                                                <td class="esg-table-body__td">@itself.InstallmentNumber</td>
                                                <td class="esg-table-body__td text-right">@itself.PreviousBalanceAmount.Value.ToString(account.reportFormats.CurrencyFormat, System.Globalization.CultureInfo.InvariantCulture)</td>
                                                <td class="esg-table-body__td text-right">@itself.AmountPaid.Value.ToString(account.reportFormats.CurrencyFormat, System.Globalization.CultureInfo.InvariantCulture)</td>
                                                <td class="esg-table-body__td text-right">@itself.OutstandingBalanceAmount.Value.ToString(account.reportFormats.CurrencyFormat, System.Globalization.CultureInfo.InvariantCulture)</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <br />

                    @*Region to get certificate file*@
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.SubHeaderDocuments</legend>
                                <div class="esg-table__container">
                                    <table class="esg-table">
                                        <thead class="esg-table-head">
                                            <tr class="esg-table-head__row">
                                                <th scope="col" class="esg-table-head__button">
                                                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.HeaderPDFFile
                                                </th>
                                                <th scope="col" class="esg-table-head__button">
                                                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.HeaderXMLFile
                                                </th>
                                                <th scope="col" class="esg-table-head__button">
                                                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.HeaderApprovedDateTime
                                                </th>
                                                <th scope="col" class="esg-table-head__button">
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="records_table_rows" class="esg-table-body">
                                            @if (Model.FiscalRecordCertificateList != null)
                                            {
                                                foreach (var item in Model.FiscalRecordCertificateList)
                                                {
                                                    <tr class="esg-table-body__row">
                                                        <td class="esg-table-body__td">
                                                            @if (item.PdfFile != null)
                                                            {
                                                                @Html.ActionLink(@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.PDFDownload, "PDFDownload", new { id = Model.InvoiceHeaderId, idc = item.FiscalRecordCertificateId })
                                                            }
                                                        </td>
                                                        <td class="esg-table-body__td">
                                                            @Html.ActionLink(@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.XMLDownload, "XMLDownload", new { id = Model.InvoiceHeaderId, idc = item.FiscalRecordCertificateId })
                                                        </td>
                                                        <td class="esg-table-body__td">
                                                            @Html.DisplayFor(modelItem => item.ApprovedDateTime)
                                                        </td>
                                                        <td class="esg-table-body__td">
                                                            <span>
                                                                <button id="@string.Format(" btnSendFiles{0}", item.FiscalRecordCertificateId)" type="button"
                                                                        class="esg-button esg-button--secondary esg-button--small" onclick="EmailModal(@Model.InvoiceHeaderId, @item.FiscalRecordCertificateId);">
                                                                    <span class="esg-button__icon esg-icon__container  esg-button-icon--align-left" aria-hidden="true">
                                                                        <svg class="esg-icon">
                                                                            <use xlink:href="#icon-email"></use>
                                                                        </svg>
                                                                    </span>
                                                                    <span class="button-label">
                                                                        @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.SendFiles
                                                                    </span>
                                                                </button>
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    @*EndRegion to get certificate file*@
                </div>
            </div>
        </div>

        <div class="esg-card--panel__footer">
            <div class="esg-button-group" role="group" aria-label="button group">
                @Html.Hidden("StatusEnum", Model.FiscalRecordStatusEnum, new { @id = "StatusEnum" })
                @if (Model.Version == Constants.CurrentCfdiVersion || Model.Version == Constants.PreviousCfdiVersion)
                {
                    if (Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.RequestedCancellation
                        || Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderCannotCancel
                        || Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderIsCanceling
                        || ((
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.RequestedFiscalRecord ||
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderCannotCreate ||
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderIsCreating
                        ) && Model.Version == Constants.CurrentCfdiVersion)
                    )
                    {
                        <button class="esg-button esg-button--primary" id="btnReprocess" type="button">
                            @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.Reprocess
                        </button>
                    }
                    if ((
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.RequestedFiscalRecord ||
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderCannotCreate ||
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.ProviderCannotCancel ||
                            Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.RequestedCancellation
                        )
                    )
                    {
                        <button class="esg-button esg-button--primary" data-creditnote="@Model.VoucherType" id="btnDelete" type="button">
                            @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnDeleteFiscalRecord
                        </button>
                        @Html.Hidden("VoucherType", Model.VoucherType, new { @id = "VoucherType" })
                    }
                    if (Model.FiscalRecordStatusEnum == enumFiscalRecordStatus.Active)
                    {
                        if (Model.CanCancelInvoice)
                        {
                            <button class="esg-button esg-button--primary" id="btnCancel" type="button">
                                @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.Cancel
                            </button>
                        }
                    }
                }

                <button class="esg-button esg-button--secondary" id="btnViewCashReceipt" type="button">
                    @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnViewReceipt
                </button>
                @Html.ActionLink(@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.ViewList, "ViewAll", null, new { @class = "esg-button esg-button--secondary" })

                @Html.ActionLink(@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnViewRelated, "PaymentReceiptsRelated", new { id = Model.InvoiceHeaderId }, new { @class = "esg-button esg-button--secondary" })
            </div>
            <br />
            <div class="esg-alert esg-alert--error errorMessageDiv" role="alert" style="display:none">
                <span class="esg-alert__icon-wrapper">
                    <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                        <svg class="esg-icon esg-icon--error-dark">
                            <use xlink:href="#icon-error"></use>
                        </svg>
                    </span>
                </span>
                <div class="esg-alert__message errorMessageResult"></div>
            </div>
            <div class="esg-alert esg-alert--success successMessageDiv" role="alert" style="display:none">
                <span class="esg-alert__icon-wrapper">
                    <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
                        <svg class="esg-icon esg-icon--success-dark">
                            <use xlink:href="#icon-check"></use>
                        </svg>
                    </span>
                </span>
                <div class="esg-alert__message successMessageResult"></div>
            </div>
            <br />
        </div>
        <div class="row" id="divCancelPPD" style="display:none">
            <div class="col-xs-12">
                <div class="esg-instruction" role="alert">
                    <span class="esg-instruction__icon-wrap">
                        <span class="esg-instruction__icon esg-icon__container" aria-hidden="True">
                            <svg class="esg-icon esg-icon--info-dark">
                                <use xlink:href="#icon-info"></use>
                            </svg>
                        </span>
                    </span>
                    <div class="esg-instruction__message">
                        @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblCancelPPDDesc<br /><br />
                        @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblCancelPPDDesc1<br /><br />
                        @WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblCanclePPDDesc2<br />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" value="@Model.requestStateId" id="InvoiceRequestHidden" />
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formModalAdd" }))
{
    <div id="ModalAdd" class="esg-modal-overlay" style="display:none; position:fixed; top:60px; bottom:0px; left:70px; right:0px;"></div>
    <div class="AddNewMappingDiv" style="display:none;">
        <div class="esg-modal-dialog">
            <div class="esg-modal-dialog__header">
                <button class="esg-modal-dialog__close esg-icon__container btnCancel" type="button" data-dismiss="modal" aria-hidden="true">
                    <svg class="esg-icon esg-icon--large esg-icon--neutral">
                        <use xlink:href="#icon-close"></use>
                    </svg>
                </button>
                <h3 class="esg-modal-dialog__title">@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.SendFiscalRecordEmail</h3>
            </div>
            <div class="esg-modal-dialog__body">
                <div id="EmailGroup" class="esg-form__group esg-has-feedback">
                    @Html.LabelFor(m => m.receiverEmail, new { @class = "esg-form__label esg-is-required" })<br />
                    <div class="esg-form__input-group">
                        @Html.Hidden("InvoiceCertificateId", new { @id = "InvoiceCertificateId" })
                        @Html.HiddenFor(m => m.InvoiceHeaderId, new { @id = "InvoiceHeaderId" })
                        @Html.TextBoxFor(m => m.receiverEmail, new { @class = "esg-form__input", @id = "ReceiverEmail", placeholder = @WebAdminUI.Views.FiscalRecords.App_LocalResources.CreateResource.YourEmail })
                        <label class="text-danger" style="display:none" id="ReceiverEmailValidation">@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.ErrorEmail</label>
                        <label class="text-danger" style="display:none" id="WarningEmailValidation">@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.WarningEmail</label>
                        <div id="EmailIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none">
                            <svg class="esg-icon esg-icon--error">
                                <use xlink:href="#icon-error"></use>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
            <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group">
                <div class="esg-button-group__item" role="group">
                    <input type="button" class="esg-button esg-button--secondary" value="@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.CancelSendFiles" id="btnCancelEmail" />
                </div>
                <div class="esg-button-group__item" role="group">
                    <input type="button" class="esg-button esg-button--primary" value="@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.SendFiles" id="btnSendEmail" />
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCancel" }))
{
    <div id="ModalCancelFiscalRecord" class="esg-modal-overlay" style="display:none; position:fixed; top:60px; bottom:0px; left:70px; right:0px;"></div>
    <div class="CancelFiscalRecordDiv" style="display:none;">
        <div class="esg-modal-dialog esg-modal-dialog--lg" style="min-width: 80%">
            <div class="esg-modal-dialog__header">
                <button id="btnCloseCancelFiscalRecord" class="esg-modal-dialog__close esg-icon__container" type="button" data-dismiss="modal" aria-hidden="true">
                    <svg class="esg-icon esg-icon--large esg-icon--neutral">
                        <use xlink:href="#icon-close"></use>
                    </svg>
                </button>
                <h3 class="esg-modal-dialog__title">@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblCancelFiscalRecordTitle</h3>
            </div>
            <div class="esg-modal-dialog__body">
                <p>@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblCancelInstructions</p>
                <table class="esg-table">
                    <thead class="esg-table-head">
                        <tr class="esg-table-head__row">
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.PeopleOrgCodeId)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.expeditionDateTime)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.serialNumber)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.folio)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.receiverTaxPayerId)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.VoucherType)
                            </th>
                        </tr>
                    </thead>
                    <tbody id="records_table_rows" class="esg-table-body">
                        <tr class="esg-table-body__row">
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.PeopleOrgCodeId)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.expeditionDateTime)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.serialNumber)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.folio)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.receiverTaxPayerId)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(model => model.VoucherType)
                            </td>
                        </tr>
                    </tbody>
                </table>
                <br />
                <div id="CancelReasonGroup" class="esg-form__group esg-has-feedback">
                    @Html.LabelFor(m => m.CancelReasons, new { @class = "esg-form__label esg-is-required" })<br />
                    <div class="esg-form__input-group" style="max-width:700px;">
                        @Html.DropDownListFor(m => m.CancelReasons, new SelectList(Model.CancelReasons, "Value", "Description"),
                            WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.lblSelect, new { @class = "esg-form__input", @id = "CancelReasons", @required = "required" })
                        <div id="divCancelReasonsErr" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                            <svg class="esg-icon esg-icon--error">
                                <use xlink:href="#icon-error"></use>
                            </svg>
                        </div>
                        @Html.ValidationMessage("CancelReasons", "", new { @class = "text-danger validation-label" })
                    </div>
                </div>
            </div>
            <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group">
                <div class="esg-button-group__item" role="group">
                    <input type="button" class="esg-button esg-button--secondary" value="@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnBack" id="btnBackFromCancel" />
                </div>
                <div class="esg-button-group__item" role="group">
                    <input type="button" class="esg-button esg-button--primary" value="@WebAdminUI.Views.FiscalRecords.App_LocalResources.EditResource.btnCancelRecord" id="btnCancelRecord" />
                </div>
            </div>
        </div>
    </div>
}

<div id="Overlaydiv" class="esg-modal-overlay no-display"></div>
<div id="Processing" class="esg-modal-dialog no-display">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var invoiceHeaderId = @Html.Raw(Json.Encode(Model.InvoiceHeaderId));
        var invoicePaymentReceiptId = @itself.InvoicePaymentReceiptId;
        var urlReprocess = '@Url.Action("Reprocess", "FiscalRecords")';
        var urlGetId = '@Url.Action("GetId", "CreditNotes")';
        var urlCreateCreditNote = '@Url.Action("Create", "CreditNotes")';
        var urlDelete = '@Url.Action("DeleteInvoceFiscalRecord", "FiscalRecords")';
        var urlSendEmail = '@Url.Action("SendEmail", "FiscalRecords")';
        var urlViewAll = '@Url.Action("ViewAll")';
        var urlSetReceiptNumber = '@Url.Action("ReceiptNumber", "CashReceipts")';
        var urlViewCashReceipt = '@Url.Action("Application", "CashReceipts")';
    </script>
    @Scripts.Render("~/bundles/FR/Edit")
    @Scripts.Render("~/bundles/FR/Pagination")
}