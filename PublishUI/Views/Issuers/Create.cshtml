@model WebAdminUI.Models.Issuers.IssuerViewModel

@{
    ViewBag.Title = WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.Create;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCreate" }))
{
    @Html.AntiForgeryToken()
    <div class="esg-card--panel">
        <div class="esg-card--panel__heading">
            <h3 class="esg-card--panel__title">@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.IssuerFiscalInformation</h3>
        </div>
        <div class="esg-card--panel__body">
            <div class="esg-card--panel__sub-heading">
                <p class="esg-small">@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.NewRecord</p>
            </div>
            <div class="esg-card--panel__content">
                <div>
                    <div id="divTaxpayerId" class="esg-form__group esg-has-feedback" style="width:250px;">
                        @Html.TextBoxFor(model => model.InvoiceOrganization.InvoiceOrganizationId, new { style = "display:none", @id = "InvoiceTaxpayerId" })
                        @Html.LabelFor(model => model.InvoiceOrganization.TaxpayerId, htmlAttributes: new { @class = "esg-form__label esg-is-required" })
                        <div class="esg-form__input-group" style="width:250px;">
                            @Html.EditorFor(model => model.InvoiceOrganization.TaxpayerId, new { htmlAttributes = new { @class = "esg-form__input", @style = "width:250px", maxlength = 13, @id = "TaxpayerId" } })
                            <div id="divTaxpayerIdIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                            <label class="text-danger" id="labelExist" style="display:none; ">@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.TaxpayerExists</label>
                            <label class="text-danger" id="TaxPayerIdValidation" style="display:none;">@WebAdminUI.Models.Resources.IssuerModelResource.TaxPayerIdValidation</label>
                        </div>
                    </div>
                </div>
                <div>
                    <div id="divCorporateName" class="esg-form__group esg-has-feedback">
                        @Html.LabelFor(model => model.InvoiceOrganization.CorporateName, htmlAttributes: new { @class = "esg-form__label esg-is-required" })
                        <div class="esg-form__input-group" style="width:550px;">
                            @Html.EditorFor(model => model.InvoiceOrganization.CorporateName, new { htmlAttributes = new { @class = "esg-form__input", @style = "width:550px", maxlength = 254, @id = "CorporateName" } })
                            <div id="divCorporateNameIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                            <label class="text-danger" id="CorporateNameValidation" style="display:none;">@WebAdminUI.Models.Resources.IssuerModelResource.CorporateNameValidation</label>
                        </div>
                        <div>
                            <p>@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.CorporateNameMessage</p>
                        </div>
                    </div>
                </div>
                <div>
                    <div id="divTaxRegimenId" class="esg-form__group esg-has-feedback">
                        @Html.LabelFor(model => model.InvoiceOrganization.TaxRegimenId, htmlAttributes: new { @class = "esg-form__label esg-is-required" })
                        <div class="esg-form__input-group" style="width:550px;">
                            @Html.DropDownListFor(model => model.InvoiceOrganization.TaxRegimenId,
                                                 new SelectList(Model.InvoiceOrganization.ListTaxRegimenCatalogs, "Id", "Description", Model.InvoiceOrganization.TaxRegimenId),
                                                 @WebAdminUI.Models.Resources.IssuerModelResource.lblSelect,
                                                 new { @class = "esg-form__input validityDropDown", @id = "TaxRegimenId" })
                            <div id="divTaxRegimenIdIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                            <label class="text-danger" id="TaxRegimenValidation" style="display:none;">@WebAdminUI.Models.Resources.IssuerModelResource.TaxRegimenValidation</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="esg-card--panel__sub-heading">
                <p class="esg-small">@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.IssuerAddress</p>
            </div>
            <div class="esg-card--panel__content">
                <div>
                    <div id="divDescription" class="esg-form__group esg-has-feedback" style="width:550px;">
                        @Html.LabelFor(model => model.InvoiceExpedition.Description, htmlAttributes: new { @class = "esg-form__label esg-is-required" })
                        <div class="esg-form__input-group" style="width:550px;">
                            @Html.EditorFor(model => model.InvoiceExpedition.Description, new { htmlAttributes = new { @class = "esg-form__input", @style = "width:550px", maxlength = 254, @id = "Description" } })
                            <div id="divDescriptionIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                            <label class="text-danger" id="DescriptionValidation" style="display:none;">@WebAdminUI.Models.Resources.IssuerModelResource.DescriptionValidation</label>
                        </div>
                    </div>
                </div>
                <div>
                    <div id="divPostalCode" class="esg-form__group esg-has-feedback">
                        @Html.LabelFor(model => model.InvoiceExpedition.PostalCode, htmlAttributes: new { @class = "esg-form__label esg-is-required" })
                        <div class="esg-form__input-group" style="width:150px;">
                            @Html.EditorFor(model => model.InvoiceExpedition.PostalCode, new { htmlAttributes = new { @class = "esg-form__input", @style = "width:150px", maxlength = 5, @id = "PostalCode" } })
                            <div id="divPostalCodeIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                        </div>
                        <label class="text-danger" id="PostalCodeValidation" style="display:none; ">@WebAdminUI.Models.Resources.IssuerModelResource.ZipCodeValidation</label>
                        <label class="text-danger" id="PostalCodeCatalogValidation" style="display:none; ">@WebAdminUI.Models.Resources.IssuerModelResource.ZipCodeNotInCatalog</label>
                    </div>
                </div>
                <div>
                    <div id="divState" class="esg-form__group esg-has-feedback" style="width:250px;">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "esg-form__label" })
                        <div class="esg-form__input-group">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "esg-form__input", @style = "width:250px", @ReadOnly = "ReadOnly" } })
                            <div id="divStateIcon" class="esg-form__feedback-icon esg-icon__container" style="display:none;">
                                <svg class="esg-icon esg-icon--error">
                                    <use xlink:href="#icon-error"></use>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="esg-card--panel__footer">
            <div>
                <div class="esg-button-group" role="group" aria-label="button group">
                    <input type="button" class="esg-button esg-button--secondary" value="@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.ViewList" id="btnViewList" onclick="location.href='@Url.Action("List", "Issuers")'" />
                    <input type="button" class="esg-button esg-button--secondary" value="@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.ClearAll" id="btnClearAll" />
                    <input type="button" class="esg-button esg-button--primary" value="@WebAdminUI.Views.Issuers.App_LocalResources.IssuerResource.Create" id="btnCreateIssuer" />
                </div>
            </div>
        </div>
    </div>
    <div id="Overlaydiv" class="esg-modal-overlay" style="display:none; position:fixed; top:0; bottom:0; left:0; right:0;"></div>
    <div id="Processing" class="esg-modal-dialog" style="display:none;">
        <div class="esg-spinner-wrapper" style="position:absolute;">
            <div class="esg-spinner"></div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        var urlGetTaxpayer = '@Url.Action("GetTaxpayer", "Issuers")';
        var urlGetTaxRegimenCatalog = '@Url.Action("GetTaxRegimenCatalog", "Issuers")';
        var urlGetPostalCode = '@Url.Action("GetPostalCode", "Issuers")';
        var urlListIssuer = '@Url.Action("List", "Issuers")';
        var urlCreateIssuer = '@Url.Action("Create", "Issuers")';
        var urlEditIssuer = '@Url.Action("Edit", "Issuers")';
        var urlAddIssuerAddress = '@Url.Action("AddIssuerAddress", "Issuers")';
        var urlEditIssuerAddress = '@Url.Action("EditIssuerAddress", "Issuers")';
        var urlDeleteIssuerAddress = '@Url.Action("DeleteIssuerAddressId", "Issuers")';
        var urlAddIssuerDocument = '@Url.Action("AddIssuerDocument", "Issuers")';
        var urlHome = '@Url.Action("Index", "Home")';
    </script>
    @Scripts.Render("~/bundles/FR/Issuer")
}