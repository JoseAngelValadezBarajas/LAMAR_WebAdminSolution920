@model IEnumerable<WebAdminUI.Models.TaxProfiles.TaxProfileListViewModel>
@{
    ViewBag.Title = @WebAdminUI.Views.TaxProfiles.App_LocalResources.ListResource.PageTitle;
}

<div class="esg-page-header">
    <a class="esg-page-header__button" role="button" title=@WebAdminUI.Views.TaxProfiles.App_LocalResources.ListResource.ButtonBack
       href="@Url.Action("Settings", "FiscalRecords")">
        <span class="esg-page-header__icon esg-icon__container">
            <svg class="esg-icon esg-icon--left">
                <use xlink:href="#icon-arrow"></use>
            </svg>
        </span>
    </a>
    <h1 class="esg-page-header__title" style="height:30px">@WebAdminUI.Views.TaxProfiles.App_LocalResources.ListResource.PageTitle</h1>
</div>
<div class="esg-card--panel">
    <div class="esg-card--panel__body">
        <div class="esg-card--panel__sub-heading">
            <p class="esg-small">@WebAdminUI.Views.TaxProfiles.App_LocalResources.ListResource.PageInstructions</p>
        </div>
        <div class="esg-card--panel__content">
            <div class="esg-table__container">
                <table class="esg-table">
                    <thead class="esg-table-head">
                        <tr class="esg-table-head__row">
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.TaxProfileName)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.TaxProfileDescription)
                            </th>
                            <th class="esg-table-head__button">
                                @Html.DisplayNameFor(model => model.TaxProfileValidities)
                            </th>
                        </tr>
                    </thead>
                    <tbody class="esg-table-body">
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {

                        <tr class="esg-table-body__row">
                            <td class="esg-table-body__td">
                                @Html.DisplayFor(modelItem => item.TaxProfileName)
                            </td>
                            <td style="word-wrap:break-word;" class="esg-table-body__td">
                                @Html.DisplayFor(modelItem => item.TaxProfileDescription)
                            </td>
                            <td class="esg-table-body__td">
                                @Html.DropDownListFor(modelItem => item.TaxProfileId,
                                                        new SelectList(item.TaxProfileValidities, "Id", "ValidityFromTo"), "",
                                                        new
                                                        {
                                                            @class = "esg-form__input validityDropDown",
                                                            @id = string.Format("validityDropdown_{0}", item.TaxProfileId),
                                                            onchange = "getProfileDetails(this);"
                                                        })
                            </td>
                        </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="validityDetailsDiv" style="display:none"></div>
<div id="Overlaydiv" class="esg-modal-overlay" style="display:none; position:fixed; top:0; bottom:0; left:0; right:0;"></div>
@section Scripts{
    <script>
        var urlListTaxProfiles = '@Url.Action("List", "TaxProfiles")';
        var urlCreateTaxProfile = '@Url.Action("Create", "TaxProfiles")';
        var urlGetTaxRateCatalog = '@Url.Action("GetTaxRateCatalog", "TaxProfiles")';
        var urlValidityDetails = '@Url.Action("ValidityDetails", "TaxProfiles")';
    </script>
    @Scripts.Render("~/bundles/FR/TaxProfiles")
}